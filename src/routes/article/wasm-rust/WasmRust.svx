---
  title: WASM with Rust
  description: Writing Rust code and using it with JavaScript
  topics: rust,javascript
---

<script lang='ts'>
  import H1 from '$components/H1.svelte';
  import H2 from '$components/H2.svelte';
  import PersonModal from './_components/PersonModal.svelte';
  import PeopleTable from './_components/PeopleTable.svelte';

  export let methods: { [key: string]: () => any };

  const links = [
    { link: 'https://docs.rs/wasm-bindgen/latest/wasm_bindgen', name: 'WASM Library', },
    { link: 'https://serde.rs/', name: 'Serde Library (Using JSON in Rust)', },
    { link: 'https://docs.rs/serde-wasm-bindgen/0.4.3/serde_wasm_bindgen/', name: 'Serde WASM Helpers', },
  ];

  interface Person {
		name: String;
		age: number;
		_meta: String;
	}

  interface Object {
    id: String;
    [key: String]: any;
  }

  let people: Person[] = [];
  let objects: Object[] = [];
  let create_object = false;
  let person = {};
  let object = {};

  const create_object_dialog = () => create_object = !create_object;
  const confirm = () => {
    people = [...people, { ...person }];
    person = {};
  };
  const cancel = () => {
    person = {};
  };

  $: unique_people = methods?.unique_by ? methods.unique_by({ key: 'name', objects: [...people] }).map(map => Object.fromEntries(map)) : [];
</script>

<H1>{title}</H1>

Rust Keys
<ol>
  {#each Object.keys(methods) as method}
    <li>{method}</li>
  {/each}
</ol>

<PersonModal handlers={[confirm, cancel]}>
  <input bind:value={person.name} type="text" placeholder="Type here" class="input input-bordered input-secondary w-full max-w-xs" />
  <input min="1" max="1997" bind:value={person.age} type="number" placeholder="Type here" class="input input-bordered input-secondary w-full max-w-xs" />
</PersonModal>

<button on:click={() => { people = [...people, methods.get_instance_of_person()] }} class="btn btn-outline btn-primary">Add MonologueMind to people</button>

<PeopleTable title="All The People" {people} />
<PeopleTable title="Unique People" people={unique_people} />


Resources
<ol>
  {#each links as { link, name }, index}
    <li><a target="_blank" class="link link-secondary link-hover" href={link}>{name}</a></li>
  {/each}
</ol>
